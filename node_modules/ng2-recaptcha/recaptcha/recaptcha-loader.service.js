"use strict";
var core_1 = require('@angular/core');
var BehaviorSubject_1 = require('rxjs/BehaviorSubject');
exports.RECAPTCHA_LANGUAGE = new core_1.OpaqueToken('recaptcha-language');
var RecaptchaLoaderService = (function () {
    function RecaptchaLoaderService(language) {
        this._language = language;
        this._init();
        this.ready = RecaptchaLoaderService._ready.asObservable();
    }
    /** @internal */
    RecaptchaLoaderService.prototype._init = function () {
        if (RecaptchaLoaderService._ready) {
            return;
        }
        window.ng2recaptchaloaded = function () {
            RecaptchaLoaderService._ready.next(grecaptcha);
        };
        RecaptchaLoaderService._ready = new BehaviorSubject_1.BehaviorSubject(null);
        var head = document.head;
        var script = document.createElement('script');
        script.innerHTML = '';
        var langParam = this._language ? '&hl=' + this._language : '';
        script.src = "https://www.google.com/recaptcha/api.js?render=explicit&onload=ng2recaptchaloaded" + langParam;
        script.async = true;
        script.defer = true;
        head.appendChild(script);
    };
    RecaptchaLoaderService.decorators = [
        { type: core_1.Injectable },
    ];
    /** @nocollapse */
    RecaptchaLoaderService.ctorParameters = [
        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [exports.RECAPTCHA_LANGUAGE,] },] },
    ];
    return RecaptchaLoaderService;
}());
exports.RecaptchaLoaderService = RecaptchaLoaderService;
